@using CMS.FluentUI.CustomAuthentication
@using Microsoft.AspNetCore.Components.Authorization
@inherits LayoutComponentBase

<FluentLayout>
    <FluentHeader>
        CMS.FluentUI
        <div class="top-row">
            <CascadingAuthenticationState>
                <AuthorizeView>
                    <Authorized>
                        <a @onclick="Logout" href="javascript:viod(0)" style="color:white; ">Logout</a>
                    </Authorized>
                    <NotAuthorized>
                        <a href="/account/login" style="color:white;text-align:end">Login</a>
                    </NotAuthorized>
                </AuthorizeView>
            </CascadingAuthenticationState>
        </div>
    </FluentHeader>
    <FluentStack Class="main" Orientation="Orientation.Horizontal" Width="100%">
        <NavMenu />
        <FluentBodyContent Class="body-content">
            <div class="content">
                @Body
            </div>
            <FluentToastProvider />
            <FluentDialogProvider />
            <FluentTooltipProvider />
            <FluentMessageBarProvider />
        </FluentBodyContent>
    </FluentStack>
    <FluentFooter>
        <a href="https://www.fluentui-blazor.net" target="_blank">Documentation and demos</a>
        <FluentSpacer />
        <a href="https://learn.microsoft.com/en-us/aspnet/core/blazor" target="_blank">About Blazor</a>
    </FluentFooter>
</FluentLayout>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code{

    [CascadingParameter]
    public Task<AuthenticationState> AuthenticationStateTask { get; set; }

    [Inject] public AuthenticationStateProvider AuthenticationStateProvider { get; set; }
    [Inject] public NavigationManager NavigationManager { get; set; }

    private async Task Logout()
    {
        var customAuthStateProvider = (CustomAuthStateProvider)AuthenticationStateProvider;
        await customAuthStateProvider.UpdateAuthneticationState(null);
        NavigationManager.NavigateTo("/", true);
    }
}