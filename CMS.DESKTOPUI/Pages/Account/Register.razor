@page "/account/register"

@inject IAccountService AccountService
@inject NavigationManager NavigationManager

@using CMS.Data.ContextModels
@using CMS.Data.FormModels
@using CMS.Services.Interface

<PageTitle>Register</PageTitle>


<div class="card" style="width:50%;align-content:center;">
    <h4 class="card-header">Register</h4>
    <div class="card-body">
        <EditForm Model="@model" OnValidSubmit="OnValidSubmit">
            <DataAnnotationsValidator />
            <div class="form-row col-12 my-3">
                <div class="form-group col-6">
                    <label>Name: </label>
                    <InputText @bind-Value="model.Name" class="form-control" />
                    <ValidationMessage For="@(() => model.Name)" />
                </div>
                <div class="form-group col-6 mt-2">
                    <label>Address: </label>
                    <InputTextArea @bind-Value="model.Address" class="form-control" />
                    <ValidationMessage For="@(() => model.Address)" />
                </div>
            </div>
            <div class="form-row col-12 my-3">
                <div class="form-group col-6">
                    <label>City: </label>
                    <InputText @bind-Value="model.City" class="form-control" />
                    <ValidationMessage For="@(() => model.City)" />
                </div>
                <div class="form-group col-6 mt-2">
                    <label>MobileNo: </label>
                    <InputText @bind-Value="model.MobileNo" class="form-control" />
                    <ValidationMessage For="@(() => model.MobileNo)" />
                </div>
            </div>
            <div class="form-row col-12 my-3">
                <div class="form-group col-6">
                    <label>Username: </label>
                    <InputText @bind-Value="model.Username" class="form-control" />
                    <ValidationMessage For="@(() => model.Username)" />
                </div>
                <div class="form-group col-6 mt-2">
                    <label>Email: </label>
                    <InputText @bind-Value="model.Email" class="form-control" />
                    <ValidationMessage For="@(() => model.Email)" />
                </div>
            </div>
            <div class="form-row col-12 my-3">
                <div class="form-group col-6">
                    <label>Password: </label>
                    <input type="password" @bind-value="model.Password" class="form-control" />
                    <ValidationMessage For="@(() => model.Password)" />
                </div>
                <div class="form-group col-6">
                    <label>Gender: </label>
                    <InputRadioGroup @bind-Value="model.Gender" class="form-control mx-2">
                        @foreach (string gender in genderList)
                        {
                                <InputRadio Value="@gender" class="mx-2" /> @gender
                        }
                    </InputRadioGroup>
                    <ValidationMessage For="@(() => model.Gender)" />
                </div>
            </div>
            <div class="form-group col-12 my-2">
                <button type="submit" disabled="@loading" class="btn btn-primary">
                    @if (loading)
                    {
                        <span class="spinner-border spinner-border-sm mr-1"></span>
                    }
                    Save
                </button>
            </div>
            <div class="form-group text-center text-dark col-12 my-2">
                <label>Already Have an Account? Please
                    <NavLink href="account/login" class="btn btn-link">Login</NavLink>
                </label>
            </div>
        </EditForm>
    </div>
</div>

@code {
    private User user = new User();
    private RegisterFM model = new RegisterFM();
    private bool loading;
    private List<string> genderList = new List<string>() { "Male", "Female", "Other" };

    private void OnValidSubmit()
    {
        loading = true;
        try
        {
             var userInfo = AccountService.Register(model);
             NavigationManager.NavigateTo("account/login");
        }
        catch (Exception ex)
        {
            loading = false;
            StateHasChanged();
        }
    }

}
