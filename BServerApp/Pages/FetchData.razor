@page "/fetchdata"

@using BServerApp.Data
@using BServerApp.Services
@inject WeatherForecastService ForecastService
@inject SampleService SampleService
@inject HttpClient client
@using Newtonsoft.Json
<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[] forecasts;
    private SampleClass[] sampleList;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
        sampleList = await SampleService.GetForecastAsync(DateTime.Now);


        var apiName = "api/WeatherForecast/GetForecastList";
        var httpResponse = await client.GetAsync(apiName);
        if (httpResponse.IsSuccessStatusCode)
        {
            List<WeatherForecast> responseData = JsonConvert.DeserializeObject<List<WeatherForecast>>(await httpResponse.Content.ReadAsStringAsync());
            //forecasts = responseData.weatherForecasts;
            StateHasChanged();
        }
    }
}


